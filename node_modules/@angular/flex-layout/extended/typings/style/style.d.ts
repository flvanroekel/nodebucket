/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */
import { DoCheck, ElementRef } from '@angular/core';
import { NgStyle, ɵNgStyleImpl, ɵNgStyleR2Impl } from '@angular/common';
import { DomSanitizer } from '@angular/platform-browser';
import { BaseDirective2, StyleUtils, MediaMarshaller } from '@angular/flex-layout/core';
import { NgStyleType, NgStyleMap } from './style-transforms';
import * as ɵngcc0 from '@angular/core';
export declare class StyleDirective extends BaseDirective2 implements DoCheck {
    protected elementRef: ElementRef;
    protected styler: StyleUtils;
    protected marshal: MediaMarshaller;
    protected delegate: ɵNgStyleImpl;
    protected sanitizer: DomSanitizer;
    private readonly ngStyleInstance;
    protected DIRECTIVE_KEY: string;
    protected fallbackStyles: NgStyleMap;
    protected isServer: boolean;
    constructor(elementRef: ElementRef, styler: StyleUtils, marshal: MediaMarshaller, delegate: ɵNgStyleImpl, sanitizer: DomSanitizer, ngStyleInstance: NgStyle, serverLoaded: boolean, platformId: Object);
    /** Add generated styles */
    protected updateWithValue(value: any): void;
    /** Remove generated styles */
    protected clearStyles(): void;
    /**
     * Convert raw strings to ngStyleMap; which is required by ngStyle
     * NOTE: Raw string key-value pairs MUST be delimited by `;`
     *       Comma-delimiters are not supported due to complexities of
     *       possible style values such as `rgba(x,x,x,x)` and others
     */
    protected buildStyleMap(styles: NgStyleType): NgStyleMap;
    /** For ChangeDetectionStrategy.onPush and ngOnChanges() updates */
    ngDoCheck(): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<StyleDirective>;
    static ɵdir: ɵngcc0.ɵɵDirectiveDefWithMeta<StyleDirective, "style-directive", never, {}, {}, never>;
}
export declare const LayoutNgStyleImplProvider: {
    provide: typeof ɵNgStyleImpl;
    useClass: typeof ɵNgStyleR2Impl;
};
/**
 * Directive to add responsive support for ngStyle.
 *
 */
export declare class DefaultStyleDirective extends StyleDirective implements DoCheck {
    protected inputs: string[];
    static ɵfac: ɵngcc0.ɵɵFactoryDef<DefaultStyleDirective>;
    static ɵdir: ɵngcc0.ɵɵDirectiveDefWithMeta<DefaultStyleDirective, "  [ngStyle],  [ngStyle.xs], [ngStyle.sm], [ngStyle.md], [ngStyle.lg], [ngStyle.xl],  [ngStyle.lt-sm], [ngStyle.lt-md], [ngStyle.lt-lg], [ngStyle.lt-xl],  [ngStyle.gt-xs], [ngStyle.gt-sm], [ngStyle.gt-md], [ngStyle.gt-lg]", never, {
    "ngStyle": "ngStyle";
    "ngStyle.xs": "ngStyle.xs";
    "ngStyle.sm": "ngStyle.sm";
    "ngStyle.md": "ngStyle.md";
    "ngStyle.lg": "ngStyle.lg";
    "ngStyle.xl": "ngStyle.xl";
    "ngStyle.lt-sm": "ngStyle.lt-sm";
    "ngStyle.lt-md": "ngStyle.lt-md";
    "ngStyle.lt-lg": "ngStyle.lt-lg";
    "ngStyle.lt-xl": "ngStyle.lt-xl";
    "ngStyle.gt-xs": "ngStyle.gt-xs";
    "ngStyle.gt-sm": "ngStyle.gt-sm";
    "ngStyle.gt-md": "ngStyle.gt-md";
    "ngStyle.gt-lg": "ngStyle.gt-lg";
}, {}, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3R5bGUuZC50cyIsInNvdXJjZXMiOlsic3R5bGUuZC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7Ozs7Ozs7OztBQVlBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQXdCQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQVdBIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBAbGljZW5zZVxuICogQ29weXJpZ2h0IEdvb2dsZSBMTEMgQWxsIFJpZ2h0cyBSZXNlcnZlZC5cbiAqXG4gKiBVc2Ugb2YgdGhpcyBzb3VyY2UgY29kZSBpcyBnb3Zlcm5lZCBieSBhbiBNSVQtc3R5bGUgbGljZW5zZSB0aGF0IGNhbiBiZVxuICogZm91bmQgaW4gdGhlIExJQ0VOU0UgZmlsZSBhdCBodHRwczovL2FuZ3VsYXIuaW8vbGljZW5zZVxuICovXG5pbXBvcnQgeyBEb0NoZWNrLCBFbGVtZW50UmVmIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBOZ1N0eWxlLCDJtU5nU3R5bGVJbXBsLCDJtU5nU3R5bGVSMkltcGwgfSBmcm9tICdAYW5ndWxhci9jb21tb24nO1xuaW1wb3J0IHsgRG9tU2FuaXRpemVyIH0gZnJvbSAnQGFuZ3VsYXIvcGxhdGZvcm0tYnJvd3Nlcic7XG5pbXBvcnQgeyBCYXNlRGlyZWN0aXZlMiwgU3R5bGVVdGlscywgTWVkaWFNYXJzaGFsbGVyIH0gZnJvbSAnQGFuZ3VsYXIvZmxleC1sYXlvdXQvY29yZSc7XG5pbXBvcnQgeyBOZ1N0eWxlVHlwZSwgTmdTdHlsZU1hcCB9IGZyb20gJy4vc3R5bGUtdHJhbnNmb3Jtcyc7XG5leHBvcnQgZGVjbGFyZSBjbGFzcyBTdHlsZURpcmVjdGl2ZSBleHRlbmRzIEJhc2VEaXJlY3RpdmUyIGltcGxlbWVudHMgRG9DaGVjayB7XG4gICAgcHJvdGVjdGVkIGVsZW1lbnRSZWY6IEVsZW1lbnRSZWY7XG4gICAgcHJvdGVjdGVkIHN0eWxlcjogU3R5bGVVdGlscztcbiAgICBwcm90ZWN0ZWQgbWFyc2hhbDogTWVkaWFNYXJzaGFsbGVyO1xuICAgIHByb3RlY3RlZCBkZWxlZ2F0ZTogybVOZ1N0eWxlSW1wbDtcbiAgICBwcm90ZWN0ZWQgc2FuaXRpemVyOiBEb21TYW5pdGl6ZXI7XG4gICAgcHJpdmF0ZSByZWFkb25seSBuZ1N0eWxlSW5zdGFuY2U7XG4gICAgcHJvdGVjdGVkIERJUkVDVElWRV9LRVk6IHN0cmluZztcbiAgICBwcm90ZWN0ZWQgZmFsbGJhY2tTdHlsZXM6IE5nU3R5bGVNYXA7XG4gICAgcHJvdGVjdGVkIGlzU2VydmVyOiBib29sZWFuO1xuICAgIGNvbnN0cnVjdG9yKGVsZW1lbnRSZWY6IEVsZW1lbnRSZWYsIHN0eWxlcjogU3R5bGVVdGlscywgbWFyc2hhbDogTWVkaWFNYXJzaGFsbGVyLCBkZWxlZ2F0ZTogybVOZ1N0eWxlSW1wbCwgc2FuaXRpemVyOiBEb21TYW5pdGl6ZXIsIG5nU3R5bGVJbnN0YW5jZTogTmdTdHlsZSwgc2VydmVyTG9hZGVkOiBib29sZWFuLCBwbGF0Zm9ybUlkOiBPYmplY3QpO1xuICAgIC8qKiBBZGQgZ2VuZXJhdGVkIHN0eWxlcyAqL1xuICAgIHByb3RlY3RlZCB1cGRhdGVXaXRoVmFsdWUodmFsdWU6IGFueSk6IHZvaWQ7XG4gICAgLyoqIFJlbW92ZSBnZW5lcmF0ZWQgc3R5bGVzICovXG4gICAgcHJvdGVjdGVkIGNsZWFyU3R5bGVzKCk6IHZvaWQ7XG4gICAgLyoqXG4gICAgICogQ29udmVydCByYXcgc3RyaW5ncyB0byBuZ1N0eWxlTWFwOyB3aGljaCBpcyByZXF1aXJlZCBieSBuZ1N0eWxlXG4gICAgICogTk9URTogUmF3IHN0cmluZyBrZXktdmFsdWUgcGFpcnMgTVVTVCBiZSBkZWxpbWl0ZWQgYnkgYDtgXG4gICAgICogICAgICAgQ29tbWEtZGVsaW1pdGVycyBhcmUgbm90IHN1cHBvcnRlZCBkdWUgdG8gY29tcGxleGl0aWVzIG9mXG4gICAgICogICAgICAgcG9zc2libGUgc3R5bGUgdmFsdWVzIHN1Y2ggYXMgYHJnYmEoeCx4LHgseClgIGFuZCBvdGhlcnNcbiAgICAgKi9cbiAgICBwcm90ZWN0ZWQgYnVpbGRTdHlsZU1hcChzdHlsZXM6IE5nU3R5bGVUeXBlKTogTmdTdHlsZU1hcDtcbiAgICAvKiogRm9yIENoYW5nZURldGVjdGlvblN0cmF0ZWd5Lm9uUHVzaCBhbmQgbmdPbkNoYW5nZXMoKSB1cGRhdGVzICovXG4gICAgbmdEb0NoZWNrKCk6IHZvaWQ7XG59XG5leHBvcnQgZGVjbGFyZSBjb25zdCBMYXlvdXROZ1N0eWxlSW1wbFByb3ZpZGVyOiB7XG4gICAgcHJvdmlkZTogdHlwZW9mIMm1TmdTdHlsZUltcGw7XG4gICAgdXNlQ2xhc3M6IHR5cGVvZiDJtU5nU3R5bGVSMkltcGw7XG59O1xuLyoqXG4gKiBEaXJlY3RpdmUgdG8gYWRkIHJlc3BvbnNpdmUgc3VwcG9ydCBmb3IgbmdTdHlsZS5cbiAqXG4gKi9cbmV4cG9ydCBkZWNsYXJlIGNsYXNzIERlZmF1bHRTdHlsZURpcmVjdGl2ZSBleHRlbmRzIFN0eWxlRGlyZWN0aXZlIGltcGxlbWVudHMgRG9DaGVjayB7XG4gICAgcHJvdGVjdGVkIGlucHV0czogc3RyaW5nW107XG59XG4iXX0=