import { StylesheetMap } from '../stylesheet-map/stylesheet-map';
import { LayoutConfigOptions } from '../tokens/library-config';
import * as ɵngcc0 from '@angular/core';
export declare class StyleUtils {
    private _serverStylesheet;
    private _serverModuleLoaded;
    private _platformId;
    private layoutConfig;
    constructor(_serverStylesheet: StylesheetMap, _serverModuleLoaded: boolean, _platformId: Object, layoutConfig: LayoutConfigOptions);
    /**
     * Applies styles given via string pair or object map to the directive element
     */
    applyStyleToElement(element: HTMLElement, style: StyleDefinition | string, value?: string | number | null): void;
    /**
     * Applies styles given via string pair or object map to the directive's element
     */
    applyStyleToElements(style: StyleDefinition, elements?: HTMLElement[]): void;
    /**
     * Determine the DOM element's Flexbox flow (flex-direction)
     *
     * Check inline style first then check computed (stylesheet) style
     */
    getFlowDirection(target: HTMLElement): [string, string];
    /**
     * Find the DOM element's raw attribute value (if any)
     */
    lookupAttributeValue(element: HTMLElement, attribute: string): string;
    /**
     * Find the DOM element's inline style value (if any)
     */
    lookupInlineStyle(element: HTMLElement, styleName: string): string;
    /**
     * Determine the inline or inherited CSS style
     * NOTE: platform-server has no implementation for getComputedStyle
     */
    lookupStyle(element: HTMLElement, styleName: string, inlineOnly?: boolean): string;
    /**
     * Applies the styles to the element. The styles object map may contain an array of values
     * Each value will be added as element style
     * Keys are sorted to add prefixed styles (like -webkit-x) first, before the standard ones
     */
    private _applyMultiValueStyleToElement;
    private _setServerStyle;
    private _getServerStyle;
    private _readStyleAttribute;
    private _writeStyleAttribute;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<StyleUtils>;
    static ɵprov: ɵngcc0.ɵɵInjectableDef<StyleUtils>;
}
/**
 * Definition of a css style. Either a property name (e.g. "flex-basis") or an object
 * map of property name and value (e.g. {display: 'none', flex-order: 5})
 */
export declare type StyleDefinition = {
    [property: string]: string | number | null;
};

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3R5bGUtdXRpbHMuZC50cyIsInNvdXJjZXMiOlsic3R5bGUtdXRpbHMuZC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7O0FBRUE7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQTJDQSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFN0eWxlc2hlZXRNYXAgfSBmcm9tICcuLi9zdHlsZXNoZWV0LW1hcC9zdHlsZXNoZWV0LW1hcCc7XG5pbXBvcnQgeyBMYXlvdXRDb25maWdPcHRpb25zIH0gZnJvbSAnLi4vdG9rZW5zL2xpYnJhcnktY29uZmlnJztcbmV4cG9ydCBkZWNsYXJlIGNsYXNzIFN0eWxlVXRpbHMge1xuICAgIHByaXZhdGUgX3NlcnZlclN0eWxlc2hlZXQ7XG4gICAgcHJpdmF0ZSBfc2VydmVyTW9kdWxlTG9hZGVkO1xuICAgIHByaXZhdGUgX3BsYXRmb3JtSWQ7XG4gICAgcHJpdmF0ZSBsYXlvdXRDb25maWc7XG4gICAgY29uc3RydWN0b3IoX3NlcnZlclN0eWxlc2hlZXQ6IFN0eWxlc2hlZXRNYXAsIF9zZXJ2ZXJNb2R1bGVMb2FkZWQ6IGJvb2xlYW4sIF9wbGF0Zm9ybUlkOiBPYmplY3QsIGxheW91dENvbmZpZzogTGF5b3V0Q29uZmlnT3B0aW9ucyk7XG4gICAgLyoqXG4gICAgICogQXBwbGllcyBzdHlsZXMgZ2l2ZW4gdmlhIHN0cmluZyBwYWlyIG9yIG9iamVjdCBtYXAgdG8gdGhlIGRpcmVjdGl2ZSBlbGVtZW50XG4gICAgICovXG4gICAgYXBwbHlTdHlsZVRvRWxlbWVudChlbGVtZW50OiBIVE1MRWxlbWVudCwgc3R5bGU6IFN0eWxlRGVmaW5pdGlvbiB8IHN0cmluZywgdmFsdWU/OiBzdHJpbmcgfCBudW1iZXIgfCBudWxsKTogdm9pZDtcbiAgICAvKipcbiAgICAgKiBBcHBsaWVzIHN0eWxlcyBnaXZlbiB2aWEgc3RyaW5nIHBhaXIgb3Igb2JqZWN0IG1hcCB0byB0aGUgZGlyZWN0aXZlJ3MgZWxlbWVudFxuICAgICAqL1xuICAgIGFwcGx5U3R5bGVUb0VsZW1lbnRzKHN0eWxlOiBTdHlsZURlZmluaXRpb24sIGVsZW1lbnRzPzogSFRNTEVsZW1lbnRbXSk6IHZvaWQ7XG4gICAgLyoqXG4gICAgICogRGV0ZXJtaW5lIHRoZSBET00gZWxlbWVudCdzIEZsZXhib3ggZmxvdyAoZmxleC1kaXJlY3Rpb24pXG4gICAgICpcbiAgICAgKiBDaGVjayBpbmxpbmUgc3R5bGUgZmlyc3QgdGhlbiBjaGVjayBjb21wdXRlZCAoc3R5bGVzaGVldCkgc3R5bGVcbiAgICAgKi9cbiAgICBnZXRGbG93RGlyZWN0aW9uKHRhcmdldDogSFRNTEVsZW1lbnQpOiBbc3RyaW5nLCBzdHJpbmddO1xuICAgIC8qKlxuICAgICAqIEZpbmQgdGhlIERPTSBlbGVtZW50J3MgcmF3IGF0dHJpYnV0ZSB2YWx1ZSAoaWYgYW55KVxuICAgICAqL1xuICAgIGxvb2t1cEF0dHJpYnV0ZVZhbHVlKGVsZW1lbnQ6IEhUTUxFbGVtZW50LCBhdHRyaWJ1dGU6IHN0cmluZyk6IHN0cmluZztcbiAgICAvKipcbiAgICAgKiBGaW5kIHRoZSBET00gZWxlbWVudCdzIGlubGluZSBzdHlsZSB2YWx1ZSAoaWYgYW55KVxuICAgICAqL1xuICAgIGxvb2t1cElubGluZVN0eWxlKGVsZW1lbnQ6IEhUTUxFbGVtZW50LCBzdHlsZU5hbWU6IHN0cmluZyk6IHN0cmluZztcbiAgICAvKipcbiAgICAgKiBEZXRlcm1pbmUgdGhlIGlubGluZSBvciBpbmhlcml0ZWQgQ1NTIHN0eWxlXG4gICAgICogTk9URTogcGxhdGZvcm0tc2VydmVyIGhhcyBubyBpbXBsZW1lbnRhdGlvbiBmb3IgZ2V0Q29tcHV0ZWRTdHlsZVxuICAgICAqL1xuICAgIGxvb2t1cFN0eWxlKGVsZW1lbnQ6IEhUTUxFbGVtZW50LCBzdHlsZU5hbWU6IHN0cmluZywgaW5saW5lT25seT86IGJvb2xlYW4pOiBzdHJpbmc7XG4gICAgLyoqXG4gICAgICogQXBwbGllcyB0aGUgc3R5bGVzIHRvIHRoZSBlbGVtZW50LiBUaGUgc3R5bGVzIG9iamVjdCBtYXAgbWF5IGNvbnRhaW4gYW4gYXJyYXkgb2YgdmFsdWVzXG4gICAgICogRWFjaCB2YWx1ZSB3aWxsIGJlIGFkZGVkIGFzIGVsZW1lbnQgc3R5bGVcbiAgICAgKiBLZXlzIGFyZSBzb3J0ZWQgdG8gYWRkIHByZWZpeGVkIHN0eWxlcyAobGlrZSAtd2Via2l0LXgpIGZpcnN0LCBiZWZvcmUgdGhlIHN0YW5kYXJkIG9uZXNcbiAgICAgKi9cbiAgICBwcml2YXRlIF9hcHBseU11bHRpVmFsdWVTdHlsZVRvRWxlbWVudDtcbiAgICBwcml2YXRlIF9zZXRTZXJ2ZXJTdHlsZTtcbiAgICBwcml2YXRlIF9nZXRTZXJ2ZXJTdHlsZTtcbiAgICBwcml2YXRlIF9yZWFkU3R5bGVBdHRyaWJ1dGU7XG4gICAgcHJpdmF0ZSBfd3JpdGVTdHlsZUF0dHJpYnV0ZTtcbn1cbi8qKlxuICogRGVmaW5pdGlvbiBvZiBhIGNzcyBzdHlsZS4gRWl0aGVyIGEgcHJvcGVydHkgbmFtZSAoZS5nLiBcImZsZXgtYmFzaXNcIikgb3IgYW4gb2JqZWN0XG4gKiBtYXAgb2YgcHJvcGVydHkgbmFtZSBhbmQgdmFsdWUgKGUuZy4ge2Rpc3BsYXk6ICdub25lJywgZmxleC1vcmRlcjogNX0pXG4gKi9cbmV4cG9ydCBkZWNsYXJlIHR5cGUgU3R5bGVEZWZpbml0aW9uID0ge1xuICAgIFtwcm9wZXJ0eTogc3RyaW5nXTogc3RyaW5nIHwgbnVtYmVyIHwgbnVsbDtcbn07XG4iXX0=