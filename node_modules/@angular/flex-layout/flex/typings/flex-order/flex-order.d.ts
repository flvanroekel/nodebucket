/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */
import { ElementRef, OnChanges } from '@angular/core';
import { BaseDirective2, StyleBuilder, StyleDefinition, StyleUtils, MediaMarshaller } from '@angular/flex-layout/core';
import * as ɵngcc0 from '@angular/core';
export declare class FlexOrderStyleBuilder extends StyleBuilder {
    buildStyles(value: string): {
        order: string | number;
    };
    static ɵfac: ɵngcc0.ɵɵFactoryDef<FlexOrderStyleBuilder>;
    static ɵprov: ɵngcc0.ɵɵInjectableDef<FlexOrderStyleBuilder>;
}
/**
 * 'flex-order' flexbox styling directive
 * Configures the positional ordering of the element in a sorted layout container
 * @see https://css-tricks.com/almanac/properties/o/order/
 */
export declare class FlexOrderDirective extends BaseDirective2 implements OnChanges {
    protected elRef: ElementRef;
    protected styleUtils: StyleUtils;
    protected styleBuilder: FlexOrderStyleBuilder;
    protected marshal: MediaMarshaller;
    protected DIRECTIVE_KEY: string;
    constructor(elRef: ElementRef, styleUtils: StyleUtils, styleBuilder: FlexOrderStyleBuilder, marshal: MediaMarshaller);
    protected styleCache: Map<string, StyleDefinition>;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<FlexOrderDirective>;
    static ɵdir: ɵngcc0.ɵɵDirectiveDefWithMeta<FlexOrderDirective, "flex-order-directive", never, {}, {}, never>;
}
export declare class DefaultFlexOrderDirective extends FlexOrderDirective {
    protected inputs: string[];
    static ɵfac: ɵngcc0.ɵɵFactoryDef<DefaultFlexOrderDirective>;
    static ɵdir: ɵngcc0.ɵɵDirectiveDefWithMeta<DefaultFlexOrderDirective, "  [fxFlexOrder], [fxFlexOrder.xs], [fxFlexOrder.sm], [fxFlexOrder.md],  [fxFlexOrder.lg], [fxFlexOrder.xl], [fxFlexOrder.lt-sm], [fxFlexOrder.lt-md],  [fxFlexOrder.lt-lg], [fxFlexOrder.lt-xl], [fxFlexOrder.gt-xs], [fxFlexOrder.gt-sm],  [fxFlexOrder.gt-md], [fxFlexOrder.gt-lg]", never, {
    "fxFlexOrder": "fxFlexOrder";
    "fxFlexOrder.xs": "fxFlexOrder.xs";
    "fxFlexOrder.sm": "fxFlexOrder.sm";
    "fxFlexOrder.md": "fxFlexOrder.md";
    "fxFlexOrder.lg": "fxFlexOrder.lg";
    "fxFlexOrder.xl": "fxFlexOrder.xl";
    "fxFlexOrder.lt-sm": "fxFlexOrder.lt-sm";
    "fxFlexOrder.lt-md": "fxFlexOrder.lt-md";
    "fxFlexOrder.lt-lg": "fxFlexOrder.lt-lg";
    "fxFlexOrder.lt-xl": "fxFlexOrder.lt-xl";
    "fxFlexOrder.gt-xs": "fxFlexOrder.gt-xs";
    "fxFlexOrder.gt-sm": "fxFlexOrder.gt-sm";
    "fxFlexOrder.gt-md": "fxFlexOrder.gt-md";
    "fxFlexOrder.gt-lg": "fxFlexOrder.gt-lg";
}, {}, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZmxleC1vcmRlci5kLnRzIiwic291cmNlcyI6WyJmbGV4LW9yZGVyLmQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7Ozs7QUFTQTs7Ozs7O0FBSUE7Ozs7Ozs7Ozs7Ozs7Ozs7QUFjQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFHQSIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQGxpY2Vuc2VcbiAqIENvcHlyaWdodCBHb29nbGUgTExDIEFsbCBSaWdodHMgUmVzZXJ2ZWQuXG4gKlxuICogVXNlIG9mIHRoaXMgc291cmNlIGNvZGUgaXMgZ292ZXJuZWQgYnkgYW4gTUlULXN0eWxlIGxpY2Vuc2UgdGhhdCBjYW4gYmVcbiAqIGZvdW5kIGluIHRoZSBMSUNFTlNFIGZpbGUgYXQgaHR0cHM6Ly9hbmd1bGFyLmlvL2xpY2Vuc2VcbiAqL1xuaW1wb3J0IHsgRWxlbWVudFJlZiwgT25DaGFuZ2VzIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBCYXNlRGlyZWN0aXZlMiwgU3R5bGVCdWlsZGVyLCBTdHlsZURlZmluaXRpb24sIFN0eWxlVXRpbHMsIE1lZGlhTWFyc2hhbGxlciB9IGZyb20gJ0Bhbmd1bGFyL2ZsZXgtbGF5b3V0L2NvcmUnO1xuZXhwb3J0IGRlY2xhcmUgY2xhc3MgRmxleE9yZGVyU3R5bGVCdWlsZGVyIGV4dGVuZHMgU3R5bGVCdWlsZGVyIHtcbiAgICBidWlsZFN0eWxlcyh2YWx1ZTogc3RyaW5nKToge1xuICAgICAgICBvcmRlcjogc3RyaW5nIHwgbnVtYmVyO1xuICAgIH07XG59XG4vKipcbiAqICdmbGV4LW9yZGVyJyBmbGV4Ym94IHN0eWxpbmcgZGlyZWN0aXZlXG4gKiBDb25maWd1cmVzIHRoZSBwb3NpdGlvbmFsIG9yZGVyaW5nIG9mIHRoZSBlbGVtZW50IGluIGEgc29ydGVkIGxheW91dCBjb250YWluZXJcbiAqIEBzZWUgaHR0cHM6Ly9jc3MtdHJpY2tzLmNvbS9hbG1hbmFjL3Byb3BlcnRpZXMvby9vcmRlci9cbiAqL1xuZXhwb3J0IGRlY2xhcmUgY2xhc3MgRmxleE9yZGVyRGlyZWN0aXZlIGV4dGVuZHMgQmFzZURpcmVjdGl2ZTIgaW1wbGVtZW50cyBPbkNoYW5nZXMge1xuICAgIHByb3RlY3RlZCBlbFJlZjogRWxlbWVudFJlZjtcbiAgICBwcm90ZWN0ZWQgc3R5bGVVdGlsczogU3R5bGVVdGlscztcbiAgICBwcm90ZWN0ZWQgc3R5bGVCdWlsZGVyOiBGbGV4T3JkZXJTdHlsZUJ1aWxkZXI7XG4gICAgcHJvdGVjdGVkIG1hcnNoYWw6IE1lZGlhTWFyc2hhbGxlcjtcbiAgICBwcm90ZWN0ZWQgRElSRUNUSVZFX0tFWTogc3RyaW5nO1xuICAgIGNvbnN0cnVjdG9yKGVsUmVmOiBFbGVtZW50UmVmLCBzdHlsZVV0aWxzOiBTdHlsZVV0aWxzLCBzdHlsZUJ1aWxkZXI6IEZsZXhPcmRlclN0eWxlQnVpbGRlciwgbWFyc2hhbDogTWVkaWFNYXJzaGFsbGVyKTtcbiAgICBwcm90ZWN0ZWQgc3R5bGVDYWNoZTogTWFwPHN0cmluZywgU3R5bGVEZWZpbml0aW9uPjtcbn1cbmV4cG9ydCBkZWNsYXJlIGNsYXNzIERlZmF1bHRGbGV4T3JkZXJEaXJlY3RpdmUgZXh0ZW5kcyBGbGV4T3JkZXJEaXJlY3RpdmUge1xuICAgIHByb3RlY3RlZCBpbnB1dHM6IHN0cmluZ1tdO1xufVxuIl19